{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//引入组件\nimport School from './components/School';\nimport Student from './components/Student';\nexport default {\n  name: 'App',\n  components: {\n    School: School,\n    Student: Student\n  },\n  data: function data() {\n    return {\n      msg: '你好啊',\n      studentName: ''\n    };\n  },\n  methods: {\n    getSchoolName: function getSchoolName(name) {\n      console.log('App收到了学校名字: ', name);\n    },\n    getStudentName: function getStudentName(name) {\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n\n      //ES6 获得的多个参数 将多个参数放入params数组\n      console.log('App收到了学生名字', params);\n      this.studentName = name;\n    },\n    m1: function m1() {\n      console.log('demo事件被触发了');\n    },\n    show: function show() {\n      console.log(123);\n    }\n  },\n  //第二种\n  mounted: function mounted() {\n    // 绑定自定义事件\n    // this.$refs.student.$on('atguigu', (name,...params )=>{\n    //     console.log('App收到了学生名字',params)\n    //     console.log(this);//该this的指向是指向student\n    //     this.studentName = name\n    // })\n    this.$refs.student.$on('atguigu', this.getStudentName); // 绑定自定义事件一次性\n    // this.$refs.student.$once('atguigu', this.getStudentName)\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACAA,aADA;AAEAC;AACAC,kBADA;AAEAC;AAFA,GAFA;AAMAC,MANA,kBAMA;AACA;AACAC,gBADA;AAEAC;AAFA;AAIA,GAXA;AAYAC;AACAC,iBADA,yBACAR,IADA,EACA;AACAS;AACA,KAHA;AAIAC,kBAJA,0BAIAV,IAJA,EAIA;AAAA;AAAAW;AAAA;;AAAA;AACAF;AACA;AAEA,KARA;AASAG,MATA,gBASA;AACAH;AAEA,KAZA;AAaAI,QAbA,kBAaA;AACAJ;AACA;AAfA,GAZA;AA8BA;AACAK,SA/BA,qBA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAPA,CAQA;AACA;AACA;AAzCA","names":["name","components","School","Student","data","msg","studentName","methods","getSchoolName","console","getStudentName","params","m1","show","mounted"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <div class=\"app\">\r\n    <h1>{{msg}},学生姓名是:{{studentName}}</h1>\r\n    <!-- 通过父组件给子组件传递函数类型的props实现: 子给父传递数据 -->\r\n    <School :getSchoolName=\"getSchoolName\"></School>\r\n    <!-- 通过父组件给子组件绑定一个自定义事件实现: 子给父传递数据(第一种写法，使用@或v-on) -->\r\n    <!-- <Student @atguigu = \"getStudentName\" @demo=\"m1\"></Student> -->\r\n\r\n    <!-- 通过父组件给子组件绑定一个自定义事件实现: 子给父传递数据(第二种ref) -->\r\n    <Student ref=\"student\" @click=\"show\"/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n//引入组件\r\nimport School from './components/School'\r\nimport Student from './components/Student'\r\nexport default {\r\n  name: 'App',\r\n  components:{\r\n      School,\r\n      Student\r\n  },\r\n    data(){\r\n      return {\r\n        msg: '你好啊',\r\n        studentName:''\r\n      }\r\n    },\r\n    methods:{\r\n      getSchoolName(name){\r\n        console.log('App收到了学校名字: ', name);\r\n      },\r\n      getStudentName(name,...params){//ES6 获得的多个参数 将多个参数放入params数组\r\n        console.log('App收到了学生名字',params)\r\n        this.studentName = name\r\n\r\n      },\r\n      m1(){\r\n        console.log('demo事件被触发了');\r\n\r\n      },\r\n      show(){\r\n        console.log(123);\r\n      }\r\n    },\r\n    \r\n    //第二种\r\n    mounted(){\r\n      // 绑定自定义事件\r\n        // this.$refs.student.$on('atguigu', (name,...params )=>{\r\n        //     console.log('App收到了学生名字',params)\r\n        //     console.log(this);//该this的指向是指向student\r\n        //     this.studentName = name\r\n        // })\r\n         this.$refs.student.$on('atguigu', this.getStudentName)\r\n      // 绑定自定义事件一次性\r\n        // this.$refs.student.$once('atguigu', this.getStudentName)\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n  .app{\r\n    background-color:gray;\r\n    padding: 5px;\r\n  }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
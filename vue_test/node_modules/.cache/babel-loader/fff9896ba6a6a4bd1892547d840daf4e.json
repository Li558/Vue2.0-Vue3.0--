{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport pubsub from 'pubsub-js';\nimport MyHeader from './components/MyHeader';\nimport MyList from './components/MyList';\nimport MyFooter from './components/MyFooter.vue';\nexport default {\n  name: 'App',\n  components: {\n    MyHeader: MyHeader,\n    MyList: MyList,\n    MyFooter: MyFooter\n  },\n  data: function data() {\n    return {\n      //由于todos是MyHeader组件和MyFooter组件都在使用，所以放在App中（状态提升）\n      todos: JSON.parse(localStorage.getItem('todos')) || []\n    };\n  },\n  methods: {\n    //添加一个todo\n    addTodo: function addTodo(todoObj) {\n      this.todos.unshift(todoObj);\n    },\n    //勾选or取消勾选一个todo\n    checkTodo: function checkTodo(id) {\n      this.todos.forEach(function (todo) {\n        if (todo.id === id) todo.done = !todo.done;\n      });\n    },\n    //删除一个todo\n    deleteTodo: function deleteTodo(_, id) {\n      this.todos = this.todos.filter(function (todo) {\n        return todo.id !== id;\n      });\n    },\n    //全选or取消全选\n    checkAllTodo: function checkAllTodo(done) {\n      this.todos.forEach(function (todo) {\n        todo.done = done;\n      });\n    },\n    //清除所有已经完成的todo\n    clearAllTodo: function clearAllTodo() {\n      this.todos = this.todos.filter(function (todo) {\n        return !todo.done;\n      });\n    }\n  },\n  watch: {\n    todos: {\n      deep: true,\n      handler: function handler(value) {\n        localStorage.setItem('todos', JSON.stringify(value));\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$bus.$on('checkTodo', this.checkTodo);\n    this.$bus.$on('updateTodo', this.updateTodo);\n    this.pubId = pubsub.subscribe('deleteTodo', this.deleteTodo);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$bus.$off('checkTodo');\n    pubsub.unsubscribe(this.pubId);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AAEA;AACAA,aADA;AAEAC;AAAAC;AAAAC;AAAAC;AAAA,GAFA;AAGAC,MAHA,kBAGA;AACA;AACA;AACAC;AAFA;AAIA,GARA;AASAC;AACA;AACAC,WAFA,mBAEAC,OAFA,EAEA;AACA;AACA,KAJA;AAKA;AACAC,aANA,qBAMAC,EANA,EAMA;AACA;AACA;AACA,OAFA;AAGA,KAVA;AAWA;AACAC,cAZA,sBAYAC,CAZA,EAYAF,EAZA,EAYA;AACA;AAAA;AAAA;AACA,KAdA;AAeA;AACAG,gBAhBA,wBAgBAC,IAhBA,EAgBA;AACA;AACAC;AACA,OAFA;AAGA,KApBA;AAqBA;AACAC,gBAtBA,0BAsBA;AACA;AACA;AACA,OAFA;AAGA;AA1BA,GATA;AAqCAC;AACAZ;AACAa,gBADA;AAEAC,aAFA,mBAEAC,KAFA,EAEA;AACAC;AACA;AAJA;AADA,GArCA;AA6CAC,SA7CA,qBA6CA;AACA;AACA;AACA;AACA,GAjDA;AAkDAC,eAlDA,2BAkDA;AACA;AACAC;AAGA;AAvDA","names":["name","components","MyHeader","MyList","MyFooter","data","todos","methods","addTodo","todoObj","checkTodo","id","deleteTodo","_","checkAllTodo","done","todo","clearAllTodo","watch","deep","handler","value","localStorage","mounted","beforeDestroy","pubsub"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n\t<div id=\"root\">\r\n\t\t<div class=\"todo-container\">\r\n\t\t\t<div class=\"todo-wrap\">\r\n\t\t\t\t<MyHeader @addTodo=\"addTodo\"/>\r\n\t\t\t\t<MyList :todos=\"todos\" />\r\n\t\t\t\t<MyFooter :todos=\"todos\" @checkAllTodo=\"checkAllTodo\" @clearAllTodo=\"clearAllTodo\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport pubsub from 'pubsub-js'\r\n\timport MyHeader from './components/MyHeader'\r\n\timport MyList from './components/MyList'\r\n\timport MyFooter from './components/MyFooter.vue'\r\n\t\r\n\texport default {\r\n\t\tname:'App',\r\n\t\tcomponents:{MyHeader,MyList,MyFooter},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t//由于todos是MyHeader组件和MyFooter组件都在使用，所以放在App中（状态提升）\r\n\t\t\t\ttodos:JSON.parse(localStorage.getItem('todos')) || []\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t//添加一个todo\r\n\t\t\taddTodo(todoObj){\r\n\t\t\t\tthis.todos.unshift(todoObj)\r\n\t\t\t},\r\n\t\t\t//勾选or取消勾选一个todo\r\n\t\t\tcheckTodo(id){\r\n\t\t\t\tthis.todos.forEach((todo)=>{\r\n\t\t\t\t\tif(todo.id === id) todo.done = !todo.done\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//删除一个todo\r\n\t\t\tdeleteTodo(_,id){\r\n\t\t\t\tthis.todos = this.todos.filter( todo => todo.id !== id )\r\n\t\t\t},\r\n\t\t\t//全选or取消全选\r\n\t\t\tcheckAllTodo(done){\r\n\t\t\t\tthis.todos.forEach((todo)=>{\r\n\t\t\t\t\ttodo.done = done\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t//清除所有已经完成的todo\r\n\t\t\tclearAllTodo(){\r\n\t\t\t\tthis.todos = this.todos.filter((todo)=>{\r\n\t\t\t\t\treturn !todo.done\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\ttodos:{\r\n\t\t\t\tdeep:true,\r\n\t\t\t\thandler(value){\r\n\t\t\t\t\tlocalStorage.setItem('todos',JSON.stringify(value))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.$bus.$on('checkTodo',this.checkTodo)\r\n\t\t\tthis.$bus.$on('updateTodo',this.updateTodo)\r\n\t\t\tthis.pubId = pubsub.subscribe('deleteTodo', this.deleteTodo)\r\n\t\t},\r\n\t\tbeforeDestroy(){\r\n\t\t\tthis.$bus.$off('checkTodo')\r\n\t\t\tpubsub.unsubscribe(this.pubId)\r\n\r\n\r\n\t\t},\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t/*base*/\r\n\tbody {\r\n\t\tbackground: #fff;\r\n\t}\r\n\t.btn {\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 4px 12px;\r\n\t\tmargin-bottom: 0;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 20px;\r\n\t\ttext-align: center;\r\n\t\tvertical-align: middle;\r\n\t\tcursor: pointer;\r\n\t\tbox-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);\r\n\t\tborder-radius: 4px;\r\n\t}\r\n\t.btn-danger {\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #da4f49;\r\n\t\tborder: 1px solid #bd362f;\r\n\t}\r\n\t.btn-edit {\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: skyblue;\r\n\t\tborder: 1px solid rgb(103, 159,180);\r\n\t\tmargin-right: 5px;\r\n\t}\r\n\t.btn-danger:hover {\r\n\t\tcolor: #fff;\r\n\t\tbackground-color: #bd362f;\r\n\t}\r\n\t.btn:focus {\r\n\t\toutline: none;\r\n\t}\r\n\t.todo-container {\r\n\t\twidth: 600px;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n\t.todo-container .todo-wrap {\r\n\t\tpadding: 10px;\r\n\t\tborder: 1px solid #ddd;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}